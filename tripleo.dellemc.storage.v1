---
version: '2.0'
name: tripleo.dellemc.storage.v1
description: TripleO manages VxFlexOS with vxflex-ansible

workflows:
  vxflex-install:
    input:
      - ansible_playbook_verbosity: 5
      - ansible_env_variables: {}
      - ansible_extra_env_variables:
          ANSIBLE_LOG_PATH: /var/log/mistral/vxflex-install-workflow.log
          ANSIBLE_SSH_RETRIES: 3
          ANSIBLE_HOST_KEY_CHECKING: False
      - vxflex_ansible_extra_vars: {}
      - vxflex_ansible_playbook: /usr/share/vxflexos-ansible/site.yaml
    tags:
      - tripleo-common-managed
    tasks:
      show_env:
        publish:
          env: <% env() %>
      set_blacklisted_ips:
        publish:
          blacklisted_ips: <% env().get('blacklisted_ip_addresses', []) %>
        on-success: set_ip_lists
      set_ip_lists:
        publish:
          mdm_ips: <% let(root => $) -> env().get('service_ips', {}).get('vxflexos_mdm_ctlplane_node_ips', []).where(not ($ in $root.blacklisted_ips)) %>
          lia_ips: <% let(root => $) -> env().get('service_ips', {}).get('vxflexos_lia_ctlplane_node_ips', []).where(not ($ in $root.blacklisted_ips)) %>
          sds_ips: <% let(root => $) -> env().get('service_ips', {}).get('vxflexos_sds_ctlplane_node_ips', []).where(not ($ in $root.blacklisted_ips)) %>
          sdc_ips: <% let(root => $) -> env().get('service_ips', {}).get('vxflexos_sdc_ctlplane_node_ips', []).where(not ($ in $root.blacklisted_ips)) %>
        on-success: merge_ip_lists
      merge_ip_lists:
        publish:
          ips_list: <% ($.mdm_ips + $.lia_ips + $.sds_ips + $.sdc_ips).toSet() %>
        on-success: enable_ssh_admin
      enable_ssh_admin:
        workflow: tripleo.access.v1.enable_ssh_admin
        input:
          ssh_servers: <% $.ips_list %>
        on-success: get_private_key
      get_private_key:
        action: tripleo.validations.get_privkey
        publish:
          private_key: <% task().result %>
        on-success: set_roles_vars
      set_roles_vars:
        publish:
          mdm_vars: <% env().get('role_merged_configs', {}).values().select($.get('vxflexos_mdm_ansible_vars', {})).aggregate($1 + $2) %>
        on-success: build_extra_vars
      build_extra_vars:
        publish:
          extra_vars: <% $.mdm_vars %>
        on-success: run_playbook 
      run_playbook:
        action: tripleo.ansible-playbook
        input:
          inventory:
            mdms:
              hosts: <% $.mdm_ips.toDict($, {}) %>
            lias:
              hosts: <% $.lia_ips.toDict($, {}) %>
            sdss:
              hosts: <% $.sds_ips.toDict($, {}) %>
            sdcs:
              hosts: <% $.sdc_ips.toDict($, {}) %>
          playbook: <% $.vxflex_ansible_playbook %>
          remote_user: tripleo-admin
          become: true
          become_user: root
          verbosity: <% $.ansible_playbook_verbosity %>
          ssh_private_key: <% $.private_key %>
          extra_env_variables: <% $.ansible_extra_env_variables.mergeWith($.ansible_env_variables) %>
          extra_vars: <% $.extra_vars %>
        publish:
          output: <% task().result %>

